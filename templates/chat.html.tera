{% extends "base" %}

{% block title %}Chat Session{% endblock %}

{% block content %}
<div class="container mt-5">
    <h2 class="mb-4">Chat Room: {{ chat_id }}</h2>
    <div id="chat-box" class="border rounded p-3 mb-3" style="height: 400px; overflow-y: scroll;">
        <!-- Messages will be displayed here -->
    </div>
    <div class="input-group">
        <input type="text" id="message-input" class="form-control" placeholder="Type your message..." aria-label="Type your message...">
        <button id="send-btn" class="btn btn-primary">Send</button>
    </div>
</div>

<script>
    const username = "{{ user.username }}";  // Use the actual username of the logged-in user
    const chatId = "{{ chat_id }}";
    const userId = "{{ user.id }}";
    const socket = new WebSocket("ws://127.0.0.1:9001");

    socket.onopen = () => {
        console.log("Connected to WebSocket chat room: " + chatId);
    };

    socket.onmessage = (event) => {
        const msg = JSON.parse(event.data);
        console.log("New message received:", msg);

        const chatBox = document.getElementById("chat-box");
        chatBox.innerHTML += "<p><strong>" + msg.username + ":</strong> " + msg.message + "</p>";
        chatBox.scrollTop = chatBox.scrollHeight;
    };

    document.getElementById("send-btn").addEventListener("click", () => {
        const input = document.getElementById("message-input");
            const message = input.value;
            const parsedUserId = parseInt(userId, 10);
            const parsedChatId = parseInt(chatId, 10);

            if (message.trim() !== "" && !isNaN(parsedUserId) && !isNaN(parsedChatId)) {
                const outgoingMessage = JSON.stringify({
                    username: username,
                    message: message,
                    user_id: parsedUserId,
                    chat_id: parsedChatId
                });
                socket.send(outgoingMessage);
                input.value = "";
            }
    });
</script>
{% endblock %}
